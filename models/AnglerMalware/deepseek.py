import requests
import warnings
SUPPORTED_LANGUAGES = ['ada', 'agda', 'alloy', 'antlr', 'applescript', 'assembly', 'augeas', 'awk', 'batchfile', 'bluespec', 'c', 'c-sharp', 'clojure', 'cmake', 'coffeescript', 'common-lisp', 'cpp', 'css', 'cuda', 'dart', 'dockerfile', 'elixir', 'elm', 'emacs-lisp', 'erlang', 'f-sharp', 'fortran', 'glsl', 'go', 'groovy', 'haskell', 'html', 'idris', 'isabelle', 'java', 'java-server-pages', 'javascript', 'json', 'julia', 'jupyter-notebook', 'kotlin', 'lean', 'literate-agda', 'literate-coffeescript', 'literate-haskell', 'lua', 'makefile', 'maple', 'markdown', 'mathematica', 'matlab', 'ocaml', 'pascal', 'perl', 'php', 'powershell', 'prolog', 'protocol-buffer', 'python', 'r', 'racket', 'restructuredtext', 'rmarkdown', 'ruby', 'rust', 'sas', 'scala', 'scheme', 'shell', 'smalltalk', 'solidity', 'sparql', 'sql', 'stan', 'standard-ml', 'stata', 'systemverilog', 'tcl', 'tcsh', 'tex', 'thrift', 'typescript', 'verilog', 'vhdl', 'visual-basic', 'xslt', 'yacc', 'yaml', 'zig']
PROMPT ="""
Based on the above code and the below conditions:
Code is obfuscated in any way shape or form
Code is malicious.
Code runs any commands.
Code runs any shellcode.
Code transmits any secrets, environment variables and passwords.
Code evades any defenses.
Code injects into other processes.
Code enumerates network.
Code does any anti-debugging.

Give me ONLY a Yes or No answer based on whether it fits ANY of the criteria;
    Do not recommend me improvements;
Answer in this format: **answer**:answer\n
GIVE ME ONLY A YES OR NO ANSWER.
"""
API_KEY = 'sk-APIKEY'
API_URL = 'https://api.deepseek.com/chat/completions' # The API endpoint
def ask_deepseek(code:str, prompt:str=PROMPT) ->bool:
    headers = {
        'Content-Type': 'application/json',
        'Authorization': f'Bearer {API_KEY}'
    }
    data = {
        "model": "deepseek-chat",
        "messages": [
            {"role": "system", "content": "You are a security analyst. Your task is to analyze code and determine if it fits any of the specified malicious criteria. Answer ONLY with 'Yes' or 'No' in the format **answer**:answer\\n. Do not provide explanations, improvements, or additional details."},
            {"role": "user", "content": f"{code}\n{prompt}"}
        ],
        "stream": False
    }
    response = requests.post(API_URL, headers=headers, json=data)

    if response.status_code == 200:  # Check if the request was successful
        result = response.json()
        return not result['choices'][0]['message']['content'].lower() == "**answer**:no" #def ans yes (rather false pos than false neg when failure)
    else:
        warnings.warn(f'Error: {response.status_code}, {response.text}')
        return True
if __name__ == "__main__":
    with open('E:/Ollama/exclusions/deleteLinux.c', 'r') as file:
        code = file.read() 
    print(ask_deepseek(code))