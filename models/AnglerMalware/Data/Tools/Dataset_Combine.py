import os
import csv
import datetime

def combine_csv_files(start_date, end_date, output_file):
    """
    Combines daily CSVs named exe_analysis_results_YYYY-MM-DD.csv 
    into a single CSV named `output_file`.
    """
    # If output_file already exists, remove it so we can start fresh
    if os.path.exists(output_file):
        os.remove(output_file)

    current_date = start_date
    header_written = False

    with open(output_file, "w", newline="", encoding="utf-8") as out_csv:
        writer = None

        while current_date <= end_date:
            # Build the CSV filename for this date
            date_str = current_date.strftime("%Y-%m-%d")
            daily_csv = f"exe_analysis_results_{date_str}.csv"

            if os.path.exists(daily_csv):
                print(f"[+] Found {daily_csv}, appending to {output_file}...")
                with open(daily_csv, "r", encoding="utf-8") as in_csv:
                    reader = csv.reader(in_csv)
                    rows = list(reader)

                    if rows:
                        # If we haven't written the header yet, write the first row as header
                        if not header_written:
                            writer = csv.writer(out_csv)
                            writer.writerow(rows[0])  # the header row
                            header_written = True

                        # Write all subsequent rows (skipping the header)
                        for row in rows[1:]:
                            writer.writerow(row)
            else:
                print(f"[-] {daily_csv} does not exist. Skipping.")

            current_date += datetime.timedelta(days=1)

    print(f"\n[+] Done! Combined CSV is at: {output_file}")

def main():
    # Adjust your date range here
    start_date = datetime.date(2020, 2, 24)
    end_date   = datetime.date(2025, 1, 21)

    # Name the final combined CSV
    combined_file = "combined_exe_analysis_results.csv"

    # Combine all daily CSVs in the range [start_date, end_date]
    combine_csv_files(start_date, end_date, combined_file)

if __name__ == "__main__":
    main()
