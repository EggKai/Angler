import pandas as pd

def compare_predictions(prediction_csv, labeled_csv):
    """
    Compare predicted_malware vs. malware using SHA256 as the key.
    Also report any samples in labeled_csv that do not appear in prediction_csv.
    
    Args:
        prediction_csv: Path to CSV with columns [SHA256, predicted_malware]
        labeled_csv:    Path to CSV with columns [FilePath, SHA256, malware]
    """
    # 1. Read the data
    df_pred = pd.read_csv(prediction_csv, dtype=str)
    df_labeled = pd.read_csv(labeled_csv, dtype=str)

    # Convert the malware columns to integers if they're strings
    df_pred["predicted_malware"] = df_pred["predicted_malware"].astype(int)
    df_labeled["malware"] = df_labeled["malware"].astype(int)

    # 2. Merge on SHA256
    #    how='left' ensures we keep all rows from df_labeled (the "truth" set).
    #    If any SHA256 from df_labeled isn't in df_pred, predicted_malware will be NaN.
    merged_df = pd.merge(
        df_labeled, 
        df_pred[["SHA256", "predicted_malware"]], 
        on="SHA256", 
        how="left"
    )

    # 3. Check which rows are missing predicted_malware (NaN)
    missing_preds = merged_df[merged_df["predicted_malware"].isna()]
    if not missing_preds.empty:
        print("The following SHA256 values are missing predictions:")
        print(missing_preds[["FilePath", "SHA256", "malware"]].to_string(index=False))
    else:
        print("All SHA256 values in the labeled file have predictions.")

    # 4. Compute accuracy for rows where predicted_malware is present
    valid_rows = merged_df.dropna(subset=["predicted_malware"]).copy()
    # Convert predicted_malware from float to int (if needed, after merge)
    valid_rows["predicted_malware"] = valid_rows["predicted_malware"].astype(int)

    # Compare labeled vs. predicted
    correct_count = (valid_rows["malware"] == valid_rows["predicted_malware"]).sum()
    total_count = len(valid_rows)
    accuracy = correct_count / total_count if total_count > 0 else 0

    print(f"\nNumber of matched rows used for accuracy calculation: {total_count}")
    print(f"Accuracy: {accuracy:.4f}")

if __name__ == "__main__":
    # Example usage
    prediction_csv_path = "predictions.csv"   # has SHA256, predicted_malware
    labeled_csv_path    = "labeled_test.csv"  # has FilePath, SHA256, malware
    
    compare_predictions(prediction_csv_path, labeled_csv_path)
